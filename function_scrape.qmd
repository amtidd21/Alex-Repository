---
title: "Function scrape"
author: "Alex Tidd"
format: html
---

```{r}
library(tidyverse)
library(rvest)
library(here)
library(lubridate)
library(forcats)
```

```{r}
scrape_men <- function(season = "20232024"){
  url_hockey <-paste("https://www.collegehockeynews.com/schedules/?season=", season, sep = "")
tab_hockey <- read_html(url_hockey) |>
  html_nodes("table")

stats_dirty <- tab_hockey[[1]] |> html_table()

regex_date <- "October|November|December|January|February|March|April"
regex_conference <- "Atlantic Hockey|Big Ten|CCHA|ECAC|Hockey East|NCHC|Ind|Exhibition|Non-Conference"
stats_regex <- stats_dirty |> mutate(date = if_else(str_detect(X1, regex_date),
                                  true = X1, false = NA_character_),
                                   conference = if_else(str_detect(X1, regex_conference), 
                                           true = X1, false = NA_character_))

stats_filled <-stats_regex |> fill(date, .direction = "down") |>
  fill(conference, .direction = "down") |> select(date, conference, everything())
stats_filled_cleaner <- stats_filled |> filter(!str_detect(X1, regex_date) &
                         !str_detect(X1, regex_conference))

schedule_new <- stats_filled_cleaner |> select(date, conference, X1, X2, X3, X4, X5, X6) |>
  slice(-1 , -2) |> rename(game_type = conference, away_team = X1, away_score = X2, location_marker = X3, home_team = X4, home_score = X5, overtime = X6) |> 
  separate(col = date, into = c("weekday", "dm", "y"),
           sep = ", ") |> 
  unite("new_date", c(dm, y),
        sep = " ") |>
  select(-weekday) |>
  mutate(date = mdy(new_date)) |>
  select(-new_date) |> 
  select(date, everything()) |>
  filter(away_team != "") |>
  filter(game_type != "Exhibition") |>
  mutate(away_score = as.double(away_score)) |>
  mutate(home_score = as.double(home_score)) |>
  filter(away_score != "") |>
  mutate(neutral_site = case_when(location_marker == "vs." ~ 1,
                                  location_marker == "at" ~ 0)) |>
  mutate(neutral_site = as.logical(neutral_site)) |>
  select(-location_marker) |>
  mutate(overtime = case_when(overtime == "" ~ 0,
                              overtime == "ot" ~ 1,
                              overtime == "2ot" ~ 1)) |>
  mutate(overtime = as.logical(overtime))
  
return(schedule_new)
}
```

```{r}
try_1 <- scrape_men("20242025")
```

