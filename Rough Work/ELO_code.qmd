---
title: "ELO Code for Hockey"
author: "Alex Tidd"
format: html
---

## Using Hope Donoghue's thesis: "Comparing Rating Methods in
NCAA Division III Womenâ€™s Soccer", as a template for an ELO ranking function. I will be able to create an ELO ranking model for men's division 1 hockey.

```{r}
library(elo)
library(dplyr)
library(tidyverse)
library(cowplot)
library(ggrepel)
library(lubridate)
```

```{r}
schedule2324 <- read.csv("~/Desktop/SYE2024/schedule2324.csv")
```

```{r}
hockey_exp_scores <- function(team_rating, opp_team_rating) {
   1/(1 + 10^((opp_team_rating-team_rating)/400))
}

hockey_new_rating <- function(team_rating, observed_score, expected_score, update_factor = 20) {team_rating + update_factor * (observed_score - expected_score)
}


```

```{r}
##Using Ron Yurko's method to creating elo ratings for NCAA, will act as skeleton as k values and scaling factors are not optimized

schedule2324 <- schedule2324 |>
  mutate(date = ymd(date))

elo_ratings <- tibble(team = unique(schedule2324$home_team),
                            elo_rating = 1500,
                            day = "2023-10-07" |>
                        ymd())

for(game_i in 1:nrow(schedule2324)) {
  home_team <- schedule2324$home_team[game_i]
  away_team <- schedule2324$away_team[game_i]
  
  observed_home_score <- schedule2324$outcome[game_i]
  observed_away_score <- 1-abs(schedule2324$outcome[game_i])
  game_date <- schedule2324$date[game_i]
  
  ##Problem with the filter()
  home_rating <- elo_ratings |>
    filter(team == home_team) |>
    arrange(desc(date)) |>
    slice(1) |>
    pull(elo_rating)
  ##Problem with the filter
  away_rating <- elo_ratings |>
    filter(team == away_team) |>
    arrange(desc(date)) |>
    slice(1) |>
    pull(elo_rating)
  
new_home_rating <- hockey_new_rating(team_rating = home_rating, observed_score = observed_home_score, expected_score = hockey_exp_scores(home_rating, away_rating))
  
new_away_rating <- hockey_new_rating(team_rating = away_rating, observed_score = observed_away_score, expected_score= hockey_exp_scores(away_rating, home_rating))

updated_ratings <- tibble(team = c(home_team, away_team),
                                elo_rating = c(new_home_rating, new_away_rating),
date = rep(date, "2023-10-08"))

elo_ratings <- elo_ratings |>
  bind_rows(updated_ratings)
}
```


```{r}
schedule2324
```

```{r}
elo_ratings
```

##elo no date, schedule (day), k variable. funtcion: output new, Function: look at each home team, find where there rating is, find away rating, put them through function -> updates new rating. just do day by day not in function form.

